<html>
<head>
	<script src="http://ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js"></script>
	<style>
		.ta {
			font: 8pt calibri;
			background-color: whitesmoke;
			border: 1px solid silver;
			width: 400px
		}
	</style>
</head>
<body>
	<textarea id="inputTA" name="inputTA" class="ta" rows="3" /></textarea>
	<input type="Button" id="btn" value="Convert" />
<script type="text/javascript">
$('#btn').click(function(){
    emailArea($('#inputTA'), [',',';',' ']);
    $(this).hide();
});

function emailArea(tao, sep) {
    // Initialize globals
    var validEmails = [], invalidEmails = [], ta, pta, eac, tc, tac;
    
    // Seperators
    sep = sep || [',', ';', '\r', '\n', ' '];
    
    // Add holder DIVs
    ta  = $('<input type="text" id="' + tao.attr('id') + '_EmailArea" />');
    tc  = $('<div id="eaTags" />');
    eac = $('<div id="eaContainer" />');
    tao.after(eac);
    eac.append(tc).append(ta);
    
    // Attach after event handlers for keyup/press, paste
    ta.on('keypress', function(e){
        // Look for comma, space, enter, semicolon as given in sep
        var char = String.fromCharCode(e.which);
        if($.inArray(char,sep) >= 0)
            process(ta.val());
    });    
    ta.on('paste', function(e) {
        var ctl = $(this);
        setTimeout(function() {
            process(ctl.val())
        }, 100);
    });    
    //attach on focus for holder to ta
    eac.on('click', function(){ ta.focus() });
   
    function process(str) {
        // Clean str, replace separators with comma, remove space
        $(sep).each(function(){ str = str.replace(new RegExp(this,"g"),',').replace(/,+/g,',') });
        // Split to array on comma or seperator parameter
        // For each item in array see if valid email and add tag if yes
        str.split(',').forEach(function(str){
            if(isValidEmail(str)) { // If valid, check if already added
                if($.inArray(str,validEmails) < 0) // If not add a tag
                    addTag(str);
                else {// If yes, add new and remove old
                    removeTag(str);
                    addTag(str);                    
                }
            }
            // Add to invalid emails array
            else
                if($.inArray(str,invalidEmails)<0)
                    invalidEmails.push(str);
        });        
        // Set tao with good emails
        tao.val(validEmails.join(','));
        // Format the invalid emails to a string adding spaces
        // Set invalid emails as text for ta
        ta.val(invalidEmails.join(', '));
        invalidEmails = [];
    };
    // Resize ta
    function resizeTa() {
        ta.css('width', 50);
        var cw = eac.width();
        var l  = ta.position().left;console.log(l,cw);
        ta.css('width', cw-l-20);// 20 if scroll bars appear
        eac.animate({ scrollTop: eac[0].scrollHeight}, 1);
    };
    // Add tag
    function addTag(email) {
        validEmails.push(email);
        var i = $.inArray(email, validEmails);
        if(validEmails.length === 1)tc.css('display', 'inline');
        var btn = $('<div>-</div>').css(cssBtn).click(close);
        var tag = $('<div id="tag'+i+'">').text(email).css(cssTag).append(btn)
        tc.append(tag);
        resizeTa();
    };
    // Remove tag
    function removeTag(email) {
        var i = $.inArray(email, validEmails);
        validEmails.pop(email);
        $('div#tag' + i).remove();
        if(validEmails.length === 0)tc.css('display','none');
        resizeTa();
    };
    // Close tag
    function close() {
        var t = $(this).parent();
        removeTag(t.text().slice(0,-1), true);        
    }
    // Styles
    var cssTa = {
            cssText: 'background: transparent !important',
            display: 'inline',
            '-webkit-box-shadow': 'none',
            'box-shadow': 'none',            
            outline: 0,
            border: 0
        },
        cssTc = {
            display: 'none'
        },
        cssTag = {
            'background-color': 'yellowgreen',
            padding: '3px 3px 3px 7px',
            'border-radius': '5px',
            color: 'white',
            margin: '3px',
            display: 'inline-block'
        },
        cssBtn = {
            display: 'inline-block',
            'background-color': 'green',
            color: 'white',
            width: '15px',
            height: '15px',
            'border-radius': '10px',
            'text-align': 'center',
            'line-height': '15px',
            'margin-left': '5px',
            cursor: 'pointer'
        };    
    // Set styles
    // Copy styles from tao to eac
    eac.attr('class',tao.attr('class'));
    eac.attr('style',tao.attr('style'));
    eac.css('overflow','auto');
    // Hide original tao
    tao.hide();
    // Set rest
    ta.css(cssTa);
    tc.css(cssTc);
    
    // isValidEmail() - Courtesy: aSeptik [http://stackoverflow.com/a/2855946/82961]
    // Feel free to implement your own
    function isValidEmail(str) {
        var pattern = new RegExp(/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i);
        return pattern.test(str);
    };
}
</script>
</body>
</html>
